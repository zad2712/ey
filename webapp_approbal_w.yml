name: Deploy WebAPP CD

on:
  workflow_call:
    inputs:
      runner_group:
        type: string
        required: true

jobs:
  deploy:
    runs-on:
      group: ${{ inputs.runner_group }}
    steps:
      # - uses: actions/create-github-app-token@v2
      #   id: app-token
      #   with:
      #     app-id: ${{ vars.GH_APP_ID }}
      #     private-key: ${{ secrets.GH_PRIVATE_KEY }}

      - id: approval
        uses: ekeel/approval-action@v1.0.3
        #if: github.event.ref == 'refs/heads/main' && github.event_name != 'pull_request'
        with:
          # A GitHub token with repo scope.
          # The default secrets.GITHUB_TOKEN does not work with octokit to open/update/close issues.
          token: ${{ secrets.PAT_TOKEN_GH }} #${{ steps.app-token.outputs.token }}
          # A comma separated list of GitHub usernames that are allowed to approve.
          # Example: 'ekeel,octocat'
          approvers: 'XE064259743_EYGS,US016020768_EYGS,US015802021_EYGS,20230108971_EYGS,US015607522_EYGS,XE064260844_EYGS,IN010M69433_EYGS,XE063459957_EYGS'
          # The number of approvals/rejections required to continue the workflow.
          minimumApprovals: '1'
          # The title of the issue to create.
          issueTitle: 'Deploy webapps production:'
          # The body of the issue to create.
          issueBody: 'Deploy webapps production'
          # A comma separated list of labels to add to the issue.
          issueLabels: 'ManualApproval,ApprovalAction'
          # Exclude the workflow initiator from the list of approvers.
          excludeInitiator: 'false'
          # A comma separated list of words that will be used to approve.
          approveWords: 'approve, approved'
          # A comma separated list of words that will be used to reject.
          rejectWords: 'deny, denied, reject, rejected'
          # The number of minutes to wait between checks for approvals.
          waitInterval: '1'
          # The number of minutes to wait before timing out.
          waitTimeout: '60'

      - name: Fail if rejected
        if: steps.approval.outputs.approved == 'false'
        run: |
          echo "Deployment was rejected. Failing the job."
          exit 1
