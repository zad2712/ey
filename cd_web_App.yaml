name: Deploy WebAPP CD

on:
  workflow_call:
    inputs:
      environment:
        type: string
        required: true
      run_apim_script_update:
        type: boolean
        default: false
      runner_group:
        type: string
        required: true
      webapp_name:
        type: string
        required: true
      apiid:
        type: string
        default: ""
      apipath:
        type: string
        default: ""
      apimproductname:
        type: string
        default: ""
      csprojpath:
        type: string
        required: true
### env vars
# 1. csprojpath
# 2. webapp_name - inputs
# 3. RESOURCEGROUP
# 4. KEYVAULTURL
# 5. apiid
# 6. apipath
# 8. apimproductname
# 9. APIMSERVICE

jobs:
  deploy:
    runs-on:
      group: ${{ inputs.runner_group }}
    environment: ${{ inputs.environment }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: build-${{ inputs.environment }}
          path: build

      - name: "Login to Azure"
        uses: azure/login@v2
        with:
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: cat appsettings
        run: |
          cat ${{ inputs.csprojpath }}/appsettings.json

      - name: Show WebApp
        run: |
          az webapp show --name ${{ inputs.webapp_name }} --resource-group ${{ vars.RESOURCEGROUP }} --query state -o tsv

      - name: locate artifact
        run: |
          ls
          echo "build files"
          cd build
          ls

      - id: approval
        uses: ekeel/approval-action@v1.0.3
        if: github.event.ref == 'refs/heads/main' && github.event_name != 'pull_request'
        with:
          # A GitHub token with repo scope.
          # The default secrets.GITHUB_TOKEN does not work with octokit to open/update/close issues.
          token: ${{ secrets.PAT_TOKEN_GH }}
          # A comma separated list of GitHub usernames that are allowed to approve.
          # Example: 'ekeel,octocat'
          approvers: 'XE064259743_EYGS,US016020768_EYGS,US015802021_EYGS,20230108971_EYGS'
          # The number of approvals/rejections required to continue the workflow.
          minimumApprovals: '1'
          # The title of the issue to create.
          issueTitle: 'Deploy webapp: ${{ inputs.webapp_name }} in RG: ${{ vars.resourceGroup }}'
          # The body of the issue to create.
          issueBody: 'Deploy webapp: ${{ inputs.webapp_name }} in RG: ${{ vars.resourceGroup }}'
          # A comma separated list of labels to add to the issue.
          issueLabels: 'ManualApproval,ApprovalAction'
          # Exclude the workflow initiator from the list of approvers.
          excludeInitiator: 'false'
          # A comma separated list of words that will be used to approve.
          approveWords: 'approve, approved'
          # A comma separated list of words that will be used to reject.
          rejectWords: 'deny, denied, reject, rejected'
          # The number of minutes to wait between checks for approvals.
          waitInterval: '1'
          # The number of minutes to wait before timing out.
          waitTimeout: '60'

      # Step 6: Deploy to Azure Web App NEEDS REFACTORING AND VARIABLE HANDLING
      - name: Deploy to Azure webapps
        uses: azure/webapps-deploy@v2
        with:
          app-name: "${{ inputs.webapp_name }}"
          package: "build"

      # Step 7: Run Powershell script to update APIM
      - name: Update APIM
        if: ${{ inputs.run_apim_script_update }}
        shell: pwsh
        run: |
          #envs
          $env:ApiId = "${{ inputs.apiid }}"
          $env:ApiPath = "${{ inputs.apipath }}"
          $env:WebAppUrl = "https://${{ inputs.webapp_name }}.azurewebsites.net/"
          $env:ApimProductName = "${{ inputs.apimproductname }}"

          $ErrorActionPreference = "Stop"
          $scriptPath = "build/APIM-Update.ps1"
          Write-Host "Running script: $scriptPath"
          & $scriptPath `
            -swaggerFilePath "build/swagger.json" `
            -subscriptionId "${{ secrets.AZURE_SUBSCRIPTION_ID }}" `
            -resourceGroup "${{ vars.RESOURCEGROUP }}" `
            -apimService "${{ vars.APIMSERVICE }}"

      # Step 8: Run policies
      # - name: Policies APIM
      #   if: ${{ inputs.run_apim_script_update }}
      #   shell: pwsh
      #   run: |
      #     az apim api policy set --resource-group ${{ vars.RESOURCEGROUP }} --service-name ${{ vars.APIMSERVICE }} --api-id ${{ inputs.apiid }} --xml-policy "@build/policies.xml"
